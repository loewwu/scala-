1. 循环语句允许我们多次执行一个语句或语句组，下面是大多数编程语言中循环语句的流程图
2. while循环：	运行一系列语句，如果条件为true，会重复运行，直到条件变为false。
while(condition)
{
   statement(s);
}
例如：
def main(args: Array[String]): Unit = {
    var a = 10
    
    while(a<20) {
      println("value of a: " + a)
      a = a + 1
    }
}

3. do... while循环：类似 while 语句区别在于判断循环条件之前，先执行一次循环的代码块；循环中的 statement(s) 会在条件被测试之前至少执行一次
do {
   statement(s);
} while( condition );
例如：
def main(args: Array[String]) {
      // 局部变量
      var a = 10;

      // do 循环
      do{
         println( "Value of a: " + a );
         a = a + 1;
      }while( a < 20 )
 }

4.for循环：用来重复执行一系列语句直到达成特定条件达成，一般通过在每次循环完成后增加计数器的值来实现。
for( var x <- Range ){
   statement(s);
}

-- for循环集合
for( var x <- List ){
   statement(s);
}

例如：
def main(args: Array[String]) {
      var a = 0;
      val numList = List(1,2,3,4,5,6);

      // for 循环
      for( a <- numList ){
         println( "Value of a: " + a );
      }
 }
 
 -- for循环条件筛选
 def main(args: Array[String]) {
      var a = 0;
      val numList = List(1,2,3,4,5,6,7,8,9,10);

      // for 循环
      for( a <- numList
           if a != 3; if a < 8 ){
         println( "Value of a: " + a );
      }
   }
 --循环中断
 def main(args: Array[String]) {
      var a = 0;
      val numList = List(1,2,3,4,5,6,7,8,9,10);

      val loop = new Breaks;
      loop.breakable {
         for( a <- numList){
            println( "Value of a: " + a );
            if( a == 4 ){
               loop.break;
            }
         }
      }
      println( "After the loop" );
   }
 -- 例子2：
 def main(args: Array[String]): Unit = {
    var a = 0
    var b = 0
    val numList1 = List(1, 2, 3, 4, 5)
    val numList2 = List(11, 12, 13)

    val outer = new Breaks
    val inner = new Breaks

    for (a <- numList1) {
      println("value of a: " + a)

      inner.breakable{
        for (b <- numList2) {
          println("value of b: " + b)
          if (b == 12) {
            inner.break
          }
        } // 内循环
      }
    } // 外循环
  }
